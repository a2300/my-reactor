plugins {
    id 'java'
    id 'eclipse'
    id 'org.springframework.boot' version '3.2.5'
    id 'io.spring.dependency-management' version '1.1.4'

    id "jacoco"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

dependencies {

    compileOnly "org.projectlombok:lombok:1.18.28"
    annotationProcessor "org.projectlombok:lombok:1.18.28"

    implementation 'org.springframework.boot:spring-boot-starter-web'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

def jacocoExclusions = [
        'com/example/**/QuotesApplication.class',
        'com/example/**/GlobalExceptionHandler.class',
        'com/example/**/QuoteIndexOutOfBoundsException.class'
]

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        xml.destination file("$buildDir/reports/jacoco/test/jacocoTestReport.xml")
        csv.required = false
        html.required = true
    }
}
jacocoTestCoverageVerification {
    dependsOn test
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: jacocoExclusions)
        }))
    }
    violationRules {
        failOnViolation = true
        rule {
            limit {
                minimum = 0.8
            }
            excludes = [
                   'com.example.QuotesApplication',
                   'com.example.GlobalExceptionHandler',
                   'com.example.QuoteIndexOutOfBoundsException'
            ]
        }
    }
}

check {
    dependsOn jacocoTestCoverageVerification
}

test {
    finalizedBy jacocoTestReport
}
